apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-model
  namespace: sentiment-analyzer
  labels:
    app: ml-model
    version: v1
spec:
  replicas: 2  # Start with 2 replicas for load balancing
  selector:
    matchLabels:
      app: ml-model
      version: v1
  template:
    metadata:
      labels:
        app: ml-model
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8001"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: ml-model
        image: sentiment-analyzer/ml-model:latest
        ports:
        - containerPort: 8001
        env:
        - name: PYTHONPATH
          value: "/app"
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: sentiment-analyzer-config
              key: LOG_LEVEL
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8001
          initialDelaySeconds: 60  # ML model needs time to load
          periodSeconds: 30
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8001
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        volumeMounts:
        - name: model-cache
          mountPath: /root/.cache
      volumes:
      - name: model-cache
        emptyDir: {}
      initContainers:
      - name: model-downloader
        image: sentiment-analyzer/ml-model:latest
        command: ['python', '-c', 'from transformers import pipeline; pipeline("sentiment-analysis", model="distilbert-base-uncased-finetuned-sst-2-english")']
        volumeMounts:
        - name: model-cache
          mountPath: /root/.cache
---
apiVersion: v1
kind: Service
metadata:
  name: ml-model-service
  namespace: sentiment-analyzer
  labels:
    app: ml-model
spec:
  selector:
    app: ml-model
  ports:
  - port: 8001
    targetPort: 8001
    protocol: TCP
    name: http
  type: ClusterIP
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: ml-model-hpa
  namespace: sentiment-analyzer
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ml-model
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
